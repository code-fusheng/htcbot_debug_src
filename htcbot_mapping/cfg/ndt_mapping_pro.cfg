#!/usr/bin/env python
# -*-coding:utf-8-*-
PACKAGE = "htcbot_mapping"

from dynamic_reconfigure.parameter_generator_catkin import * 
gen = ParameterGenerator()

switch_exp_enum = gen.enum([
    gen.const("NONE", int_t, 0, "NONE"),
    gen.const("START", int_t, 1, "START"),
    gen.const("FINISH", int_t, -1, "FINISH"),
    gen.const("STOP", int_t, 2, "STOP")
], "switch_exp_enum")

method_type_enum = gen.enum([
    gen.const("PCL_GENERIC", int_t, 0, "PCL_GENERIC"),
    gen.const("PCL_ANH", int_t, 1, "PCL_ANH"),
    gen.const("PCL_GPU", int_t, 2, "PCL_GPU")
], "method_type_enum")

offset_enum = gen.enum([
    gen.const("zero", str_t, "zero", "zero"),
    gen.const("linear", str_t, "linear", "linear")
], "offset_enum")

gen.add("is_debug", bool_t, 0, "Is Debug", True)
gen.add("is_pub_map", bool_t, 0, "Is Pub Map", True)
gen.add("method_type", int_t, 0, "Method Type", 1, 0, 3, edit_method=method_type_enum)
gen.add("queue_size", int_t, 0, "Queue Size", 1, 1, 1000)
gen.add("voxel_leaf_size", double_t, 0, "Voxel Leaf Size", 1.5, 0, 10)
gen.add("max_iter", int_t, 0, "Max Iter", 30, 0, 150)
gen.add("step_size", double_t, 0, "Step Size", 0.1, 0, 10)
gen.add("trans_eps", double_t, 0, "Trans Eps", 0.01, 0, 1)
gen.add("ndt_res", double_t, 0, "Ndt Res", 1.0, 0, 10)
gen.add("is_filter_add_map", bool_t, 0, "Is Filter Add Map", True)
gen.add("filter_res", double_t, 0, "Filter Res", 0.15, 0, 10)

# map 处理
gen.add("is_pub_pgm", bool_t, 0, "Is Pub Pgm", True)
gen.add("is_filter_pass_through", bool_t, 0, "Is Filter Pass Through", True)
gen.add("filter_high", double_t, 0, "Filter High", 2.0, -99, 99)
gen.add("filter_low", double_t, 0, "Filter Low", -1.0, -99, 99)
gen.add("is_filter_radius_outlier", bool_t, 0, "Is Filter Radius Outlier", True)
gen.add("filter_radius", double_t, 0, "Filter Radius", 0.5, -10, 10)
gen.add("filter_thre_count", int_t, 0, "Filter Thre Count", 5, 0, 100000)

gen.add("min_scan_range", double_t, 0, "Min Scan Range", 0.5, 0, 999)
gen.add("max_scan_range", double_t, 0, "Max Scan Range", 150.0, 0, 999)
gen.add("min_scan_height", double_t, 0, "Min Scan Height", -0.2, -99, 99)
gen.add("max_scan_height", double_t, 0, "Max Scan Height", 10.0, -99, 99)

gen.add("min_add_shift", double_t, 0, "Min Add Shift", 1.0, 0, 10)
gen.add("is_limit_flat", bool_t, 0, "Is Limit Flat", False)
gen.add("is_sync_update_map", bool_t, 0, "Is Sync Update Map", False)
gen.add("is_remapping", bool_t, 0, "Is Remapping", False)

gen.add("align_error_threshold", double_t, 0, "Align Error Threshold", 0.8, 0, 5)

exit(gen.generate(PACKAGE, "ndt_mapping_pro_node", "ndt_mapping_pro"))